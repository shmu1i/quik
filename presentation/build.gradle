apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdk 34
    flavorDimensions "analytics"

    defaultConfig {
        applicationId 'dev.octoshrimpy.quik'
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 2229
        versionName '4.1.1'
        setProperty("archivesBaseName", "QUIK-v${versionName}")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            if (System.getenv("CI") == "true") {
                storeFile file("${System.getenv("HOME")}/.android/debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }
    }

    dependenciesInfo {
        includeInApk = false
        includeInBundle = false
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            resValue("string", "app_name", "QUIK-Debug")
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    productFlavors {
        withAnalytics { dimension "analytics" }
        noAnalytics {
            signingConfig signingConfigs.release
        }
    }

    lint {
        abortOnError false
    }

    namespace 'dev.octoshrimpy.quik'
}

androidExtensions {
    experimental = true
}

configurations {
    noAnalyticsDebug
    noAnalyticsRelease
    withAnalyticsDebug
    withAnalyticsRelease
}

dependencies {
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.emoji2:emoji2-bundled:$androidx_emoji2_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.viewpager2:viewpager2:$androidx_viewpager_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.work:work-runtime-ktx:$androidx_work_version"
    implementation "com.bluelinelabs:conductor:$conductor_version"
    implementation "com.bluelinelabs:conductor-archlifecycle:$conductor_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.google.ExoPlayer:exoplayer-core:$exoplayer_version"
    implementation("com.github.google.ExoPlayer:exoplayer-ui:$exoplayer_version", {
        exclude group: "com.android.support", module: "support-media-compat"
    })
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$rxbinding_version"
    implementation "com.uber.autodispose:autodispose-android-archcomponents:$autodispose_version"
    implementation "com.uber.autodispose:autodispose-android-archcomponents-test:$autodispose_version"
    implementation "com.uber.autodispose:autodispose-android:$autodispose_version"
    implementation "com.uber.autodispose:autodispose:$autodispose_version"
    implementation "com.uber.autodispose:autodispose-lifecycle:$autodispose_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation 'com.github.pengrad:jdk9-deps:1ffe84c468'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation('com.googlecode.ez-vcard:ez-vcard:0.10.4', {
        exclude group: "org.jsoup", module: "jsoup"
        exclude group: "org.freemarker", module: "freemarker"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
    })
    implementation "com.github.realm:realm-android-adapters:$realm_adapters_version"
    kapt "io.realm:realm-annotations:$realm_version"
    kapt "io.realm:realm-annotations-processor:$realm_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    implementation "com.uber.rxdogtag:rxdogtag:$rxdogtag_version"
    implementation "com.uber.rxdogtag:rxdogtag-autodispose:$rxdogtag_version"
    androidTestImplementation("androidx.test.espresso:espresso-core:$espresso_version", {
        exclude group: "com.android.support", module: "support-annotations"
    })
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "androidx.test:runner:$androidx_testrunner_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    debugImplementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:$coroutines_version"
    implementation "com.github.chrisbanes:photoview:2.1.4"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:$rx_preferences_version"
    implementation "com.github.google:flexbox-layout:0.3.1"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "me.leolin:ShortcutBadger:1.1.22"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(":android-smsmms")
    implementation project(":common")
    implementation project(':data')
    implementation project(':domain')
    withAnalyticsImplementation 'com.google.firebase:firebase-crashlytics:17.3.0'
    withAnalyticsImplementation "com.android.billingclient:billing:$billing_version"
    withAnalyticsImplementation "com.android.billingclient:billing-ktx:$billing_version"
    noAnalyticsDebug project(path: ':data', configuration: 'noAnalyticsDebug')
    noAnalyticsRelease project(path: ':data', configuration: 'noAnalyticsRelease')
    withAnalyticsDebug project(path: ':data', configuration: 'withAnalyticsDebug')
    withAnalyticsRelease project(path: ':data', configuration: 'withAnalyticsRelease')
}

if (getGradle().getStartParameter().getTaskRequests().toString().contains("WithAnalytics")) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}
